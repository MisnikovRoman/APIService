//
//  APIService.swift
//  APIKit
//
//  Created by MisnikovRoman on 06/04/2019.
//  Copyright ¬© 2019 MisnikovRoman. All rights reserved.
//

public protocol IApiService {
	/// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Ç—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
	///
	/// - Parameters:
	///   - request: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
	///   - completion: Callback —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
	func send(_ request: Request, completion: @escaping (Result<Response,Error>)->())

	/// –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–µ—Ç–∏ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å
	///
	/// - Parameters:
	///   - Type: –¢–∏–ø –º–æ–¥–µ–ª–∏, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å
	///   - resource: –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
	///   - completion: Callback —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
	func getData<T: Decodable>(from resource: String, as Type: T.Type, completion: @escaping (Result<T, Error>)->())

	func test()
}

public class ApiService: IApiService {
	public init() {}

	public func test() {}

	public func send(_ request: Request, completion: @escaping (Result<Response,Error>) -> ()) {
		print("üåê API Request: .\(request.type.rawValue), url: \(request.baseUrl + request.urlPath), parameters: \(request.params)" )

		guard let urlRequest = RequestBuilder().build(from: request) else { return }

		URLSession.shared.dataTask(with: urlRequest) { (data, response, error) in
			if let error = error {
				completion(.failure(error))
			}
			if let response = response,
				let simpleResponse = Response(response: response, data: data) {
				completion(.success(simpleResponse))
			}
		}.resume()
	}

	func cancel() {
		assertionFailure("–ù–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏")
	}


	struct Test: Decodable {
		let a: String
	}

	public func getData<T: Decodable>(from resource: String, as Type: T.Type, completion: @escaping (Result<T, Error>)->()) {
		let simpleRequest = Request(type: .GET, url: resource)
		self.send(simpleRequest) { completion(ResultConverter.convert(response: $0, to: Type)) }
	}
}

